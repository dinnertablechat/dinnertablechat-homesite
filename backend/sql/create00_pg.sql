-- MySQL Script generated by MySQL Workbench
-- Mon 05 Nov 2018 02:57:10 PM PST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

/* SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0; */
/* SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0; */
/* SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION'; */

-- -----------------------------------------------------
-- Schema dtc
-- -----------------------------------------------------
-- DROP SCHEMA IF EXISTS ;

-- -----------------------------------------------------
-- Schema dtc
-- -----------------------------------------------------
-- CREATE SCHEMA IF NOT EXISTS ;
-- USE public ;

-- -----------------------------------------------------
-- Table `.`debate_session`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS debate_session (
  id INT NOT NULL,
  matchid CHAR(36) NULL,
  created TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  topic VARCHAR(45) NULL,
  PRIMARY KEY (id));

CREATE INDEX pk_matchid ON debate_session (matchid ASC);


-- -----------------------------------------------------
-- Table `.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS users (
  created TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  id INT NOT NULL,
  xp INT NULL,
  username VARCHAR(45) NULL,
  credits INT NULL,
  badges TEXT NULL,
  PRIMARY KEY (id))
;


-- -----------------------------------------------------
-- Table `.`debate_review`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS debate_review (
  id INT NOT NULL,
  created TIMESTAMP(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  review TEXT NOT NULL,
  aggrement SMALLINT NOT NULL,
  users_id INT NOT NULL,
  debate_session_id INT NOT NULL,
  PRIMARY KEY (id)
 ,
  CONSTRAINT fk_debate_review_users1
    FOREIGN KEY (users_id)
    REFERENCES users (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_debate_review_debate_session1
    FOREIGN KEY (debate_session_id)
    REFERENCES debate_session (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX fk_debate_review_users1_idx ON debate_review (users_id ASC);
CREATE INDEX fk_debate_review_debate_session1_idx ON debate_review (debate_session_id ASC);


-- -----------------------------------------------------
-- Table `.`debate_session_users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS debate_session_users (
  users_id INT NOT NULL,
  debate_session_id INT NOT NULL,
  badges TEXT NULL,
  wasForIt SMALLINT NULL,
  character SMALLINT NULL,
  PRIMARY KEY (users_id, debate_session_id)
 ,
  CONSTRAINT fk_users_has_debate_session_users1
    FOREIGN KEY (users_id)
    REFERENCES users (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_users_has_debate_session_debate_session1
    FOREIGN KEY (debate_session_id)
    REFERENCES debate_session (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX fk_users_has_debate_session_debate_session1_idx ON debate_session_users (debate_session_id ASC);
CREATE INDEX fk_users_has_debate_session_users1_idx ON debate_session_users (users_id ASC);


/* SET SQL_MODE=@OLD_SQL_MODE; */
/* SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS; */
/* SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS; */
