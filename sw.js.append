workbox.core.skipWaiting();
workbox.core.clientsClaim();

addEventListener('message', (event) => {
  if (!event.data){
    return;
  }

  switch (event.data) {
    case 'skipWaiting':
      // self.skipWaiting();
      workbox.core.skipWaiting();
      // if(workbox && workbox.core.skipWaiting) workbox.core.skipWaiting();
      // else console.log('workbox not found');
      break;
    default:
      // NOOP
      break;
  }
});

// pull latest on refresh, not sure if working
addEventListener('fetch', event => {
  event.respondWith((async () => {
    if (event.request.mode === "navigate" &&
      event.request.method === "GET" &&
      registration.waiting &&
      (await clients.matchAll()).length < 2
    ) {
      registration.waiting.postMessage('skipWaiting');
      return new Response("", {headers: {"Refresh": "0"}});
    }
    return await caches.match(event.request) ||
      fetch(event.request);
  })());
});

// Cache the Google Fonts stylesheets with a stale-while-revalidate strategy.
workbox.routing.registerRoute(
  /^https:\/\/fonts\.googleapis\.com/,
  workbox.strategies.staleWhileRevalidate({
    cacheName: 'google-fonts-stylesheets',
  })
);

// Cache the underlying font files with a cache-first strategy for 1 year.
workbox.routing.registerRoute(
  /^https:\/\/fonts\.gstatic\.com/,
  workbox.strategies.cacheFirst({
    cacheName: 'google-fonts-webfonts',
    plugins: [
      new workbox.cacheableResponse.Plugin({
        statuses: [0, 200],
      }),
      new workbox.expiration.Plugin({
        maxAgeSeconds: 60 * 60 * 24 * 365,
        maxEntries: 30,
      }),
    ],
  })
);

// Cache images
workbox.routing.registerRoute(
  /\.(?:png|gif|jpg|jpeg|svg)$/,
  workbox.strategies.networkFirst({
    cacheName: 'images',
    plugins: [
      new workbox.expiration.Plugin({
        maxEntries: 60,
        maxAgeSeconds: 30 * 24 * 60 * 1, // 2 Days
      }),
    ],
  })
);

// cache svg animations
workbox.routing.registerRoute(
  /.*(?:assets).*\.(?:json)$/,
  workbox.strategies.networkFirst({
    cacheName: 'assets',
    plugins: [
      new workbox.expiration.Plugin({
        maxEntries: 60,
        maxAgeSeconds: 30 * 24 * 60 * 1, // 2 Days
      }),
    ],
  })
);

// cache i18n
workbox.routing.registerRoute(
  /.*(?:i18n).*\.(?:json)$/,
  workbox.strategies.networkFirst({
    cacheName: 'i18n',
    plugins: [
      new workbox.expiration.Plugin({
        maxEntries: 60,
        maxAgeSeconds: 600, // 10m, same as _headers
      }),
    ],
  })
);

// cache lambda calls
workbox.routing.registerRoute(
  /.*(?:execute).*(?:production|staging|dev).*$/,
  workbox.strategies.networkFirst({
    cacheName: 'api',
    plugins: [
      new workbox.expiration.Plugin({
        maxEntries: 60,
        maxAgeSeconds: 30 * 24 * 60 * 1, // 1 Days
      }),
    ],
  })
);